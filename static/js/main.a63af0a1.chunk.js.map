{"version":3,"sources":["styles/avatars/sarah.jpg","styles/avatars/john.jpg","utils/_DATA.js","styles/avatars/tyler.jpg","utils/api.js","actions/users.js","actions/questions.js","actions/shared.js","actions/authedUser.js","components/Navbar.js","utils/helpers.js","components/Question.js","components/LoginPage.js","components/RedirectLogin.js","components/Dashboard.js","components/Leader.js","components/Leaderboard.js","components/NewQuestion.js","components/QuestionPage.js","components/NotFound.js","components/App.js","reducers/authedUser.js","reducers/users.js","reducers/questions.js","reducers/index.js","middlewares/logger.js","middlewares/index.js","index.js"],"names":["users","sarahedo","id","name","avatarURL","sarah","answers","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","questions","tylermcginnis","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","johndoe","john","author","timestamp","optionOne","votes","text","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","concat","saveQuestionAnswer","info","qid","answer","_saveQuestionAnswer","RECIEVE_USERS","UPDATE_USER_QUESTIONS","ADD_USER_ANSWER","REMOVE_USER_ANSWER","RECIEVE_QUESTIONS","ADD_QUESTION","ADD_ANSWER","REMOVE_ANSWER","handleAddQuestion","dispatch","getState","showLoading","then","type","addQuestion","uid","updateUserQuestions","hideLoading","handleAddAnswer","addAnswer","addUserAnswer","catch","e","console","log","removeAnswer","removeUserAnswer","alert","handleInitialData","all","recieveUsers","recieveQuestions","SET_AUTHED_USER","REMOVE_AUTHED_USER","setAuthedUser","removeAuthedUser","Navbar","handleLogout","props","this","path","className","to","src","alt","style","cursor","onClick","Component","withRouter","connect","location","pathname","hasVoted","includes","length","authedUserVote","formatUsers","Object","keys","map","answeredQuestions","createdQuestions","score","Question","handleViewDetails","preventDefault","history","push","LoadingPage","state","handleChange","setState","value","handleSubmit","onSubmit","options","onChange","label","logedin","children","LoginPage","Dashboard","answeredList","handleDisplayedList","answeredQuetionIds","unansweredQuetionIds","sort","a","b","filter","Leader","prize","Leaderboard","0","1","2","user","idx","NewQuestion","option1","option2","redirect","trim","target","placeholder","maxLength","QuestionPage","option","checked","clacWidth","toFixed","width","match","params","NotFound","App","exact","component","action","combineReducers","loadingBar","loadingBarReducer","logger","store","next","group","returnValue","groupEnd","applyMiddleware","thunk","createStore","reducer","middleware","ReactDOM","render","document","getElementById"],"mappings":"6QAAe,MAA0B,kCCA1B,MAA0B,iCCOrCA,EAAQ,CACRC,SAAU,CACNC,GAAI,WACJC,KAAM,YACNC,UAAWC,EACXC,QAAS,CACL,yBAA0B,YAC1B,uBAAwB,YACxBC,uBAAwB,YACxBC,sBAAuB,aAE3BC,UAAW,CAAC,yBAA0B,2BAE1CC,cAAe,CACXR,GAAI,gBACJC,KAAM,iBACNC,UCvBO,IAA0B,kCDwBjCE,QAAS,CACLK,sBAAuB,YACvBC,uBAAwB,aAE5BH,UAAW,CAAC,wBAAyB,0BAEzCI,QAAS,CACLX,GAAI,UACJC,KAAM,WACNC,UAAWU,EACXR,QAAS,CACLM,uBAAwB,YACxBD,sBAAuB,YACvB,uBAAwB,aAE5BF,UAAW,CAAC,uBAAwB,4BAIxCA,EAAY,CACZ,yBAA0B,CACtBP,GAAI,yBACJa,OAAQ,WACRC,UAAW,cACXC,UAAW,CACPC,MAAO,CAAC,YACRC,KAAM,mCAEVC,UAAW,CACPF,MAAO,GACPC,KAAM,mCAGd,uBAAwB,CACpBjB,GAAI,uBACJa,OAAQ,UACRC,UAAW,cACXC,UAAW,CACPC,MAAO,GACPC,KAAM,sBAEVC,UAAW,CACPF,MAAO,CAAC,UAAW,YACnBC,KAAM,0BAGdZ,uBAAwB,CACpBL,GAAI,yBACJa,OAAQ,WACRC,UAAW,cACXC,UAAW,CACPC,MAAO,GACPC,KAAM,kBAEVC,UAAW,CACPF,MAAO,CAAC,YACRC,KAAM,kBAGdX,sBAAuB,CACnBN,GAAI,wBACJa,OAAQ,gBACRC,UAAW,cACXC,UAAW,CACPC,MAAO,GACPC,KAAM,4BAEVC,UAAW,CACPF,MAAO,CAAC,YACRC,KAAM,4BAGdR,sBAAuB,CACnBT,GAAI,wBACJa,OAAQ,gBACRC,UAAW,cACXC,UAAW,CACPC,MAAO,CAAC,iBACRC,KAAM,qBAEVC,UAAW,CACPF,MAAO,CAAC,WACRC,KAAM,oCAGdP,uBAAwB,CACpBV,GAAI,yBACJa,OAAQ,UACRC,UAAW,cACXC,UAAW,CACPC,MAAO,CAAC,WACRC,KAAM,oBAEVC,UAAW,CACPF,MAAO,CAAC,iBACRC,KAAM,iBAwCX,SAASE,EAAcC,GAC1B,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACrB,IAAMC,EAAaJ,EAASP,OACtBY,EAnBd,YAAmE,IAAzCC,EAAwC,EAAxCA,cAAeC,EAAyB,EAAzBA,cAAed,EAAU,EAAVA,OACpD,MAAO,CACHb,GAnBA4B,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,IACxCH,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,IAmBxCjB,UAAWkB,KAAKC,MAChBpB,SACAE,UAAW,CACPC,MAAO,GACPC,KAAMS,GAEVR,UAAW,CACPF,MAAO,GACPC,KAAMU,IAQgBO,CAAed,GAEzCe,YAAW,WACP5B,EAAS,2BACFA,GADE,kBAEJkB,EAAkBzB,GAAKyB,IAG5B3B,EAAK,2BACEA,GADF,kBAEA0B,EAFA,2BAGM1B,EAAM0B,IAHZ,IAIGjB,UAAWT,EAAM0B,GAAYjB,UAAU6B,OAAO,CAC1CX,EAAkBzB,SAK9BsB,EAAIG,KACL,QE9KJ,IAQMY,EAAqB,SAACC,GAAD,OF0K3B,YAA2D,IAA5Bd,EAA2B,EAA3BA,WAAYe,EAAe,EAAfA,IAAKC,EAAU,EAAVA,OACnD,OAAO,IAAInB,SAAQ,SAACC,EAAKC,GACrBY,YAAW,WACPrC,EAAK,2BACEA,GADF,kBAEA0B,EAFA,2BAGM1B,EAAM0B,IAHZ,IAIGpB,QAAQ,2BACDN,EAAM0B,GAAYpB,SADlB,kBAEFmC,EAAMC,QAKnBjC,EAAS,2BACFA,GADE,kBAEJgC,EAFI,2BAGEhC,EAAUgC,IAHZ,kBAIAC,EAJA,2BAKMjC,EAAUgC,GAAKC,IALrB,IAMGxB,MAAOT,EAAUgC,GAAKC,GAAQxB,MAAMoB,OAAO,CACvCZ,UAMhBF,MACD,QEtMiCmB,CAAoBH,ICfnDI,EAAgB,gBAChBC,EAAwB,wBACxBC,EAAkB,kBAClBC,EAAqB,qB,iBCCrBC,EAAoB,oBACpBC,EAAe,eACfC,EAAa,aACbC,EAAgB,gBAYhBC,EAAoB,SAACxB,EAAeC,GAAhB,OAAkC,SAC/DwB,EACAC,GACE,IFRuBd,EESjBd,EAAe4B,IAAf5B,WAER,OADA2B,EAASE,0BFVgBf,EEWL,CAChBzB,OAAQW,EACRE,gBACAC,iBFd8BR,EAAcmB,IEe7CgB,MAAK,SAAClC,GACL+B,EAhBY,SAAC/B,GAAD,MAAe,CAC/BmC,KAAMR,EACN3B,YAcaoC,CAAYpC,IACrB+B,EDrB2B,SAACM,EAAKrC,GAAN,MAAoB,CACnDmC,KAAMZ,EACNc,MACArC,YCkBasC,CAAoBlC,EAAYJ,EAASpB,KAClDmD,EAASQ,8BAkBJC,EAAkB,SAACrB,EAAKC,GAAN,OAAiB,SAACW,EAAUC,GAAc,IAC7D5B,EAAe4B,IAAf5B,WAGR,OAFA2B,EAhBc,SAACZ,EAAKf,EAAYgB,GAAlB,MAA8B,CAC5Ce,KAAMP,EACNT,MACAf,aACAgB,UAYSqB,CAAUtB,EAAKf,EAAYgB,IACpCW,EDrCyB,SAACM,EAAKrC,EAAUoB,GAAhB,MAA4B,CACrDe,KAAMX,EACNa,MACArC,WACAoB,UCiCSsB,CAActC,EAAYe,EAAKC,IACjCH,EAAmB,CAAEb,aAAYe,MAAKC,WAAUuB,OAAM,SAACC,GAC1DC,QAAQC,IAAIF,GACZb,EAba,SAACZ,EAAKf,EAAYgB,GAAlB,MAA8B,CAC/Ce,KAAMN,EACNV,MACAf,aACAgB,UASa2B,CAAa5B,EAAKf,EAAYgB,IACvCW,EDlCwB,SAACM,EAAKrC,EAAUoB,GAAhB,MAA4B,CACxDe,KAAMV,EACNY,MACArC,WACAoB,UC8Ba4B,CAAiB5C,EAAYe,EAAKC,IAC3C6B,MAAM,kDCrDDC,EAAoB,kBAAM,SAACnB,GAEpC,OADAA,EAASE,yBHEThC,QAAQkD,IAAI,CFkIL,IAAIlD,SAAQ,SAACC,EAAKC,GACrBY,YAAW,kBAAMb,EAAI,eAAKf,MAAc,QAPrC,IAAIc,SAAQ,SAACC,EAAKC,GACrBY,YAAW,kBAAMb,EAAI,eAAKxB,MAAU,UE5HnCwD,MAAK,yCAAyB,CAC3B/C,UADE,KAEFT,MAFE,SAILiE,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,MGNNV,MAAK,YAA2B,IAAxBxD,EAAuB,EAAvBA,MAAOS,EAAgB,EAAhBA,UACnC4C,EFHoB,SAACrD,GAAD,MAAY,CACpCyD,KAAMb,EACN5C,SECa0E,CAAa1E,IACtBqD,EDAwB,SAAC5C,GAAD,MAAgB,CAC5CgD,KAAMT,EACNvC,aCFakE,CAAiBlE,IAC1B4C,EAASQ,8BCVJe,EAAkB,kBAClBC,EAAqB,qBAErBC,EAAgB,SAAC5E,GAAD,MAAS,CAClCuD,KAAMmB,EACN1E,OAGS6E,EAAmB,SAAC7E,GAAD,MAAS,CACrCuD,KAAMoB,EACN3E,O,OCLE8E,E,4MACFC,aAAe,WACX,EAAKC,MAAM7B,SAAS0B,M,4CAExB,WAAU,IAAD,EACwBI,KAAKD,MAA1BxD,EADH,EACGA,WAAY0D,EADf,EACeA,KACpB,OACI,qBAAKC,UAAU,MAAf,SACI,+BACI,oBACIA,UAAS,mBACI,MAATD,EAAe,aAAe,IAFtC,SAKI,cAAC,IAAD,CAASE,GAAG,IAAZ,oBAEJ,oBACID,UAAS,mBACI,SAATD,EAAkB,aAAe,IAFzC,SAKI,cAAC,IAAD,CAASE,GAAG,OAAZ,4BAEJ,oBACID,UAAS,mBACI,iBAATD,EAA0B,aAAe,IAFjD,SAKI,cAAC,IAAD,CAASE,GAAG,eAAZ,4BAEH5D,EAAWvB,MACR,qCACI,oBAAID,GAAG,WAAP,uBAA0BwB,EAAWvB,QACrC,6BACI,qBACIoF,IAAK7D,EAAWtB,UAChBoF,IAAI,SACJH,UAAU,kBAGlB,oBACII,MAAO,CAAEC,OAAQ,WACjBL,UAAU,WACVM,QAASR,KAAKF,aAHlB,gC,GAxCPW,aA2DNC,cAAWC,mBAJF,SAAC,EAAD,OAAG9F,EAAH,EAAGA,MAAO0B,EAAV,EAAUA,WAAgBqE,EAA1B,EAA0BA,SAA1B,MAA0C,CAC9DrE,WAAW,eAAM1B,EAAM0B,IACvB0D,KAAMW,EAASC,YAEOF,CAAyBd,IChEtC5C,EAAiB,SAACd,EAAUP,EAAQW,GAAgB,IACrDxB,EAAwCoB,EAAxCpB,GAAIe,EAAoCK,EAApCL,UAAWG,EAAyBE,EAAzBF,UAAWJ,EAAcM,EAAdN,UAC1Bb,EAAoBY,EAApBZ,KAAMC,EAAcW,EAAdX,UACVsC,EAAS,GACTuD,GAAW,EASf,OARIhF,EAAUC,MAAMgF,SAASxE,KACzBgB,EAAS,YACTuD,GAAW,GAEX7E,EAAUF,MAAMgF,SAASxE,KACzBgB,EAAS,YACTuD,GAAW,GAER,CACH9F,OACAD,KACAc,YACAZ,YACAa,UAAW,CACPC,MAAOD,EAAUC,MAAMiF,OACvBhF,KAAMF,EAAUE,MAEpBC,UAAW,CACPF,MAAOE,EAAUF,MAAMiF,OACvBhF,KAAMC,EAAUD,MAEpB8E,WACAG,eAAgB1D,IAIX2D,EAAc,SAACrG,GAAD,OACvBA,EACMsG,OAAOC,KAAKvG,GAAOwG,KAAI,SAACtG,GACpB,IAAMuG,EAAoBH,OAAOC,KAAKvG,EAAME,GAAII,SAAS6F,OACnDO,EAAmB1G,EAAME,GAAIO,UAAU0F,OAC7C,MAAO,CACHjG,KACAC,KAAMH,EAAME,GAAIC,KAChBC,UAAWJ,EAAME,GAAIE,UACrBqG,oBACAC,mBACAC,MAAOF,EAAoBC,MAGnC,ICxCJE,E,4MACFC,kBAAoB,SAAC3C,EAAGhE,GACpBgE,EAAE4C,iBACF,EAAK5B,MAAM6B,QAAQC,KAAnB,oBAAqC9G,K,4CAEzC,WAAU,IAAD,OACGoB,EAAa6D,KAAKD,MAAlB5D,SACR,OACI,qBAAI+D,UAAU,WAAd,UACI,qBAAKA,UAAU,kBAAf,mBAAqC/D,EAASnB,KAA9C,YACA,qBAAKkF,UAAU,kBAAf,SACI,qBAAKE,IAAKjE,EAASlB,UAAWoF,IAAI,aAEtC,sBAAKH,UAAU,mBAAf,UACI,0DACyB/D,EAASL,UAAUE,KAD5C,eACuDG,EAASF,UAAUD,KAD1E,OAGA,wBACIkE,UAAU,MACVM,QAAS,SAACzB,GAAD,OAAO,EAAK2C,kBAAkB3C,EAAG5C,EAASpB,KAFvD,oC,GAjBG0F,aAuCRC,cAAWC,mBAVF,SAAC,EAAD,GAA+C,IAA5CrF,EAA2C,EAA3CA,UAAWiB,EAAgC,EAAhCA,WAAY1B,EAAoB,EAApBA,MAAWE,EAAS,EAATA,GACzD,OAAKO,GAAciB,GAAe1B,EAC3B,CACHsB,SAAUc,EACN3B,EAAUP,GACVF,EAAMS,EAAUP,GAAIa,QACpBW,IALwC,CAAEJ,SAAU,QAStCwE,CAAyBc,I,gBCrC7CK,E,4MACFC,MAAQ,CACJxF,WAAY,I,EAEhByF,aAAe,SAACjD,GACZ,EAAKkD,SAAS,CACV1F,WAAYwC,EAAEmD,S,EAGtBC,aAAe,SAACpD,GACZA,EAAE4C,iBADgB,IAEVzD,EAAa,EAAK6B,MAAlB7B,SACA3B,EAAe,EAAKwF,MAApBxF,WACRA,GAAc2B,EAASyB,EAAcpD,K,4CAEzC,WAAU,IAAD,EACyByD,KAAKD,MAA3BlF,EADH,EACGA,MAAO0B,EADV,EACUA,WAEf,OACI,mCACMA,EAqBE,cAAC,IAAD,CAAU4D,GAAG,MApBb,sBAAKD,UAAU,+BAAf,UACI,sBAAKA,UAAU,eAAf,UACI,0EAGA,kEAEJ,uBACIkC,SAAUpC,KAAKmC,aACfjC,UAAU,aAFd,UAII,cAAC,IAAD,CAAYA,UAAU,eACtB,cAAC,IAAD,CACImC,QAASxH,EACTqF,UAAU,SACVoC,SAAUtC,KAAKgC,eAEnB,wBAAQ9B,UAAU,MAAlB,iC,GAtCFO,aA2DXE,qBAZS,SAAC,GAAD,QAAG9F,aAAH,MAAW,GAAX,QAAiC,CACrD0B,WADoB,EAAeA,WAEnC1B,MAAOsG,OAAOC,KAAKvG,GAAOwG,KAAI,SAACtG,GAAD,MAAS,CACnCmH,MAAOnH,EACPwH,MACI,sBAAKrC,UAAU,eAAf,UACI,qBAAKE,IAAKvF,EAAME,GAAIE,UAAWoF,IAAI,WACnC,+BAAOxF,EAAME,GAAIC,iBAKlB2F,CAAyBmB,GCpDzBnB,qBALS,SAAC,EAAD,SAAmC,CACvD6B,QAAwB,OADJ,EAAGjG,WAEvBkG,SAFoB,EAAmBA,YAK5B9B,EAVO,SAACZ,GAAW,IACtByC,EAAsBzC,EAAtByC,QAASC,EAAa1C,EAAb0C,SACjB,OAAOD,EAAUC,EAAW,cAACC,EAAD,OCD1BC,E,4MACFZ,MAAQ,CACJa,cAAc,G,EAElBC,oBAAsB,SAACD,GAAD,OAAkB,EAAKX,SAAS,CAAEW,kB,4CAExD,WAAU,IAAD,OACL,OACI,cAAC,EAAD,UACI,sBAAK1C,UAAU,YAAf,UACI,qBAAKA,UAAU,eAAf,SACI,+BACI,oBACIM,QAAS,kBAAM,EAAKqC,qBAAoB,IACxC3C,UACIF,KAAK+B,MAAMa,aAAe,GAAK,YAHvC,kCAQA,oBACIpC,QAAS,kBAAM,EAAKqC,qBAAoB,IACxC3C,UACIF,KAAK+B,MAAMa,aAAe,YAAc,GAHhD,qCAUR,oBAAI1C,UAAU,iBAAd,SACKF,KAAK+B,MAAMa,aACN5C,KAAKD,MAAM+C,mBAAmBzB,KAAI,SAACtG,GAAD,OAC9B,cAAC,EAAD,CAAmBA,GAAIA,GAARA,MAEnBiF,KAAKD,MAAMgD,qBAAqB1B,KAAI,SAACtG,GAAD,OAChC,cAAC,EAAD,CAAmBA,GAAIA,GAARA,iB,GApCzB0F,aAyDTE,qBAZU,SAAC,GAAsC,IAApCrF,EAAmC,EAAnCA,UAAWiB,EAAwB,EAAxBA,WAAY1B,EAAY,EAAZA,MACzCM,EAAUoB,EAAa4E,OAAOC,KAAKvG,EAAM0B,GAAYpB,SAAW,GACtE,MAAO,CACH2H,mBAAoB3H,EAAQ6H,MACxB,SAACC,EAAGC,GAAJ,OAAU5H,EAAU4H,GAAGrH,UAAYP,EAAU2H,GAAGpH,aAEpDkH,qBAAsB5B,OAAOC,KAAK9F,GAC7B6H,QAAO,SAACpI,GAAD,OAASI,EAAQ4F,SAAShG,MACjCiI,MAAK,SAACC,EAAGC,GAAJ,OAAU5H,EAAU4H,GAAGrH,UAAYP,EAAU2H,GAAGpH,gBAInD8E,CAA0BgC,GCxC1BS,EApBA,SAACrD,GACZ,IAAMsD,EAAQtD,EAAMsD,MAAQtD,EAAMsD,MAAQ,GAC1C,OACI,qBAAInD,UAAU,SAAd,UACI,qBAAKE,IAAKL,EAAM9E,UAAWoF,IAAI,WAC/B,sBAAKH,UAAU,cAAf,UACI,sBAAMA,UAAU,QAAhB,SAAyBH,EAAM/E,OAC/B,sBAAMkF,UAAU,QAAhB,gCACA,sBAAMA,UAAU,QAAhB,SAAyBH,EAAMuB,oBAC/B,sBAAMpB,UAAU,QAAhB,+BACA,sBAAMA,UAAU,QAAhB,SAAyBH,EAAMwB,sBAEnC,sBAAKrB,UAAU,QAAf,UACI,sBAAMA,UAAU,eAAhB,mBACA,sBAAMA,UAAS,uBAAkBmD,GAAjC,SAA2CtD,EAAMyB,eCV3D8B,G,4JACF,WACI,IAAMD,EAAQ,CACVE,EAAG,OACHC,EAAG,SACHC,EAAG,UAEP,OACI,cAAC,EAAD,UACI,qBAAKvD,UAAU,yBAAf,SACKF,KAAKD,MAAMlF,MAAMwG,KAAI,SAACqC,EAAMC,GAAP,OAClB,cAAC,EAAD,aAAQN,MAAOA,EAAMM,IAAwBD,GAAbA,EAAK3I,e,GAXnC0F,aAsBXE,sBAHU,SAAC,GAAD,IAAG9F,EAAH,EAAGA,MAAH,MAAgB,CACrCA,MAAOqG,EAAYrG,GAAOmI,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAE1B,MAAQyB,EAAEzB,YAE1Cb,CAA0B2C,ICtBnCM,G,4MACF7B,MAAQ,CACJ8B,QAAS,GACTC,QAAS,GACTC,UAAU,G,EAEd5B,aAAe,SAACpD,GACZA,EAAE4C,iBADgB,IAEVzD,EAAa,EAAK6B,MAAlB7B,SAFU,EAGW,EAAK6D,MAA1B8B,EAHU,EAGVA,QAASC,EAHC,EAGDA,QACjB,OAAKD,EAAQG,OACRF,EAAQE,QACb9F,EAASD,EAAkB4F,EAASC,SACpC,EAAK7B,SAAS,CACV4B,QAAS,GACTC,QAAS,GACTC,UAAU,KALc3E,MAAM,6BADNA,MAAM,8B,EAStC4C,aAAe,SAACjD,GACZ,EAAKkD,SAAL,eACKlD,EAAEkF,OAAOlJ,GAAKgE,EAAEkF,OAAO/B,S,4CAGhC,WACI,OAAIlC,KAAK+B,MAAMgC,SAAiB,cAAC,IAAD,CAAU5D,GAAG,MAEzC,cAAC,EAAD,UACI,qBAAKD,UAAU,wBAAf,SACI,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,sBAAf,iCAGA,uBACIA,UAAU,oBACVkC,SAAUpC,KAAKmC,aAFnB,UAII,wDACA,uBACI7D,KAAK,OACLvD,GAAG,UACHmJ,YAAY,aACZC,UAAU,KACV7B,SAAUtC,KAAKgC,eAEnB,uBAAOjH,GAAG,KAAV,gBACA,uBACIuD,KAAK,OACLvD,GAAG,UACHmJ,YAAY,aACZC,UAAU,KACV7B,SAAUtC,KAAKgC,eAEnB,wBAAQ9B,UAAU,MAAlB,kC,GArDFO,aA+DXE,sBADS,iBAAO,KAChBA,CAAyBiD,IC/DlCQ,G,4MACFrC,MAAQ,CACJsC,OAAQ,I,EAEZrC,aAAe,SAACjD,GACZA,EAAEkF,OAAOK,SACL,EAAKrC,SAAS,CACVoC,OAAQtF,EAAEkF,OAAO/B,S,EAG7BC,aAAe,SAACpD,GACZA,EAAE4C,iBADgB,IAEV0C,EAAW,EAAKtC,MAAhBsC,OAFU,EAGa,EAAKtE,MAA5B7B,EAHU,EAGVA,SAAU/B,EAHA,EAGAA,SAClB,IAAKkI,EAAQ,OAAOjF,MAAM,6BAC1BlB,EAASS,EAAgBxC,EAASpB,GAAIsJ,K,EAE1CE,UAAY,SAACtB,EAAGC,GAAJ,OAAYD,GAAKA,EAAIC,GAAK,GAAM,KAAKsB,QAAQ,I,4CACzD,WAAU,IACErI,EAAa6D,KAAKD,MAAlB5D,SACR,OAAKA,EAOD,qBAAK+D,UAAU,wBAAf,SACI,qBAAIA,UAAU,WAAd,UACI,qBAAKA,UAAU,kBAAf,SACK/D,EAAS2E,SAAT,mBACiB3E,EAASnB,MAD1B,UAEQmB,EAASnB,KAFjB,YAIL,qBAAKkF,UAAU,kBAAf,SACI,qBAAKE,IAAKjE,EAASlB,UAAWoF,IAAI,aAEtC,qBAAKH,UAAU,mBAAf,SACK/D,EAAS2E,SACN,qCACI,+CACA,uBACIZ,UAAS,qBACuB,cAA5B/D,EAAS8E,eACH,QACA,IAJd,UAOI,yBACC9E,EAASL,UAAUE,KACpB,qBAAKkE,UAAU,eAAf,SACI,sBACIA,UAAU,cACVI,MAAO,CACHmE,MAAM,GAAD,OAAKzE,KAAKuE,UACXpI,EAASL,UAAUC,MACnBI,EAASF,UAAUF,OAFlB,MAHb,UASKiE,KAAKuE,UACFpI,EAASL,UAAUC,MACnBI,EAASF,UAAUF,OAX3B,SAVR,UA0BQI,EAASL,UAAUC,MA1B3B,mBA2BQI,EAASL,UAAUC,MACnBI,EAASF,UAAUF,MA5B3B,aA+BA,uBACImE,UAAS,qBACuB,cAA5B/D,EAAS8E,eACH,QACA,IAJd,UAOI,yBACC9E,EAASF,UAAUD,KACpB,qBAAKkE,UAAU,eAAf,SACI,sBACIA,UAAU,cACVI,MAAO,CACHmE,MAAM,GAAD,OAAKzE,KAAKuE,UACXpI,EAASF,UAAUF,MACnBI,EAASL,UAAUC,OAFlB,MAHb,UASKiE,KAAKuE,UACFpI,EAASF,UAAUF,MACnBI,EAASL,UAAUC,OAX3B,SAVR,UA0BQI,EAASF,UAAUF,MA1B3B,mBA2BQI,EAASL,UAAUC,MACnBI,EAASF,UAAUF,MA5B3B,gBAiCJ,qCACI,wDACA,uBACImE,UAAU,gCACVkC,SAAUpC,KAAKmC,aAFnB,UAII,kCACI,uBACI7D,KAAK,QACLtD,KAAK,SACLkH,MAAM,YACNI,SAAUtC,KAAKgC,eAElB7F,EAASL,UAAUE,QAExB,kCACI,uBACIsC,KAAK,QACLtD,KAAK,SACLkH,MAAM,YACNI,SAAUtC,KAAKgC,eAElB7F,EAASF,UAAUD,QAExB,wBAAQkE,UAAU,MAAlB,kCA5GxBd,MACI,gHAEG,cAAC,IAAD,CAAUe,GAAG,W,GAxBLM,aAuJZE,sBAXS,SAAC,EAAkCZ,GAAW,IAA3CzE,EAA0C,EAA1CA,UAAWiB,EAA+B,EAA/BA,WAAY1B,EAAmB,EAAnBA,MAC9C,IAAKS,IAAciB,IAAe1B,EAAO,MAAO,CAAEsB,SAAU,MADK,IAEzDpB,EAAOgF,EAAM2E,MAAMC,OAAnB5J,GACR,MAAO,CACHoB,SAAUc,EACN3B,EAAUP,GACVF,EAAMS,EAAUP,GAAIa,QACpBW,MAIGoE,CAAyByD,I,SCrIzBQ,GAnBE,SAAC7E,GACd,OACI,cAAC,EAAD,UACI,sBAAKG,UAAU,kCAAf,UACI,qCACA,cAAC,KAAD,CAAOA,UAAU,mBACjB,gDACA,oGAIA,uCACU,cAAC,IAAD,CAAMC,GAAG,IAAT,kBADV,uBCHV0E,G,uKACF,WACI7E,KAAKD,MAAM7B,SAASmB,O,oBAExB,WACI,OACI,cAAC,IAAD,UACI,sBAAKa,UAAU,MAAf,UACI,cAAC,IAAD,IACA,cAAC,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAO4E,OAAK,EAAC7E,KAAK,IAAI8E,UAAWpC,IACjC,cAAC,IAAD,CAAO1C,KAAK,eAAe8E,UAAWzB,KACtC,cAAC,IAAD,CAAOrD,KAAK,OAAO8E,UAAWnB,KAC9B,cAAC,IAAD,CAAO3D,KAAK,gBAAgB8E,UAAWX,KACvC,cAAC,IAAD,CAAOnE,KAAK,SAAS8E,UAAWrC,IAChC,cAAC,IAAD,CAAOqC,UAAWH,iB,GAhBxBnE,aAwBHE,uBAAUkE,I,SCxBVtI,GAXI,WAA2B,IAA1BwF,EAAyB,uDAAjB,KAAMiD,EAAW,uCACzC,OAAQA,EAAO1G,MACX,KAAKmB,EACD,OAAOuF,EAAOjK,GAClB,KAAK2E,EACD,OAAO,KACX,QACI,OAAOqC,ICyCJlH,GA3CD,WAAyB,IAAxBkH,EAAuB,uDAAf,GAAIiD,EAAW,uCAClC,OAAQA,EAAO1G,MACX,KAAKb,EACD,OAAO,2BACAsE,GACAiD,EAAOnK,OAElB,KAAK6C,EACD,OAAO,2BACAqE,GADP,kBAEKiD,EAAOxG,IAFZ,2BAGWuD,EAAMiD,EAAOxG,MAHxB,IAIQlD,UAAWyG,EAAMiD,EAAOxG,KAAKlD,UAAU6B,OACnC6H,EAAO7I,cAIvB,KAAKwB,EACD,OAAO,2BACAoE,GADP,kBAEKiD,EAAOxG,IAFZ,2BAGWuD,EAAMiD,EAAOxG,MAHxB,IAIQrD,QAAQ,2BACD4G,EAAMiD,EAAOxG,KAAKrD,SADlB,kBAEF6J,EAAO7I,SAAW6I,EAAO7J,cAI1C,KAAKyC,EACD,IAAMzC,EAAO,eAAQ4G,EAAMiD,EAAOxG,KAAKrD,SAEvC,cADOA,EAAQ6J,EAAO7I,UACf,2BACA4F,GADP,kBAEKiD,EAAOxG,IAFZ,2BAGWuD,EAAMiD,EAAOxG,MAHxB,IAIQrD,cAGZ,QACI,OAAO4G,ICAJzG,GAvCG,WAAyB,IAAxByG,EAAuB,uDAAf,GAAIiD,EAAW,uCACtC,OAAQA,EAAO1G,MACX,KAAKT,EACD,OAAO,2BACAkE,GACAiD,EAAO1J,WAElB,KAAKwC,EACD,OAAO,2BACAiE,GADP,kBAEKiD,EAAO7I,SAASpB,GAAKiK,EAAO7I,WAErC,KAAK4B,EACD,IAAM5B,EAAW4F,EAAMiD,EAAO1H,KAK9B,OAJAnB,EAAS6I,EAAOzH,QAAQxB,MAAQI,EAC5B6I,EAAOzH,QACTxB,MAAMoB,OAAO,CAAC6H,EAAOzI,aACvByC,QAAQC,IAAI,CAAC9C,aACN,2BACA4F,GADP,kBAEKiD,EAAO1H,IAAMnB,IAGtB,KAAK6B,EACD,IAAM7B,EAAW4F,EAAMiD,EAAO1H,KAK9B,OAJAnB,EAAS6I,EAAOzH,QAAQxB,MAAQI,EAC5B6I,EAAOzH,QACTxB,MAAMoH,QAAO,SAAC3E,GAAD,OAASA,IAAQwG,EAAOzI,cAEhC,2BACAwF,GADP,kBAEKiD,EAAO1H,IAAMnB,IAGtB,QACI,OAAO4F,ICpCJkD,gBAAgB,CAC3B1I,cACA1B,SACAS,aACA4J,WAAYC,sBCDDC,GATA,SAACC,GAAD,OAAW,SAACC,GAAD,OAAU,SAACN,GACjChG,QAAQuG,MAAMP,EAAO1G,MACrBU,QAAQC,IAAI,eAAgB+F,GAC5B,IAAMQ,EAAcF,EAAKN,GAGzB,OAFAhG,QAAQC,IAAI,kBAAmBoG,EAAMlH,YACrCa,QAAQyG,WACDD,K,SCFIE,gBACXC,KACAP,ICGEC,GAAQO,aAAYC,GAASC,IACnCC,IAASC,OACL,cAAC,WAAD,CAAUX,MAAOA,GAAjB,SACI,cAAC,GAAD,MAEJY,SAASC,eAAe,W","file":"static/js/main.a63af0a1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sarah.b4e09f47.jpg\";","export default __webpack_public_path__ + \"static/media/john.c6bc6887.jpg\";","/**\n * Avatar images in this file from http://www.freepik.com Designed by studiogstock\n */\nimport sarah from \"../styles/avatars/sarah.jpg\";\nimport john from \"../styles/avatars/john.jpg\";\nimport tyler from \"../styles/avatars/tyler.jpg\";\n\nlet users = {\n    sarahedo: {\n        id: \"sarahedo\",\n        name: \"Sarah Edo\",\n        avatarURL: sarah,\n        answers: {\n            \"8xf0y6ziyjabvozdd253nd\": \"optionOne\",\n            \"6ni6ok3ym7mf1p33lnez\": \"optionTwo\",\n            am8ehyc8byjqgar0jgpub9: \"optionTwo\",\n            loxhs1bqm25b708cmbf3g: \"optionTwo\",\n        },\n        questions: [\"8xf0y6ziyjabvozdd253nd\", \"am8ehyc8byjqgar0jgpub9\"],\n    },\n    tylermcginnis: {\n        id: \"tylermcginnis\",\n        name: \"Tyler McGinnis\",\n        avatarURL: tyler,\n        answers: {\n            vthrdm985a262al8qx3do: \"optionOne\",\n            xj352vofupe1dqz9emx13r: \"optionTwo\",\n        },\n        questions: [\"loxhs1bqm25b708cmbf3g\", \"vthrdm985a262al8qx3do\"],\n    },\n    johndoe: {\n        id: \"johndoe\",\n        name: \"John Doe\",\n        avatarURL: john,\n        answers: {\n            xj352vofupe1dqz9emx13r: \"optionOne\",\n            vthrdm985a262al8qx3do: \"optionTwo\",\n            \"6ni6ok3ym7mf1p33lnez\": \"optionTwo\",\n        },\n        questions: [\"6ni6ok3ym7mf1p33lnez\", \"xj352vofupe1dqz9emx13r\"],\n    },\n};\n\nlet questions = {\n    \"8xf0y6ziyjabvozdd253nd\": {\n        id: \"8xf0y6ziyjabvozdd253nd\",\n        author: \"sarahedo\",\n        timestamp: 1467166872634,\n        optionOne: {\n            votes: [\"sarahedo\"],\n            text: \"have horrible short term memory\",\n        },\n        optionTwo: {\n            votes: [],\n            text: \"have horrible long term memory\",\n        },\n    },\n    \"6ni6ok3ym7mf1p33lnez\": {\n        id: \"6ni6ok3ym7mf1p33lnez\",\n        author: \"johndoe\",\n        timestamp: 1468479767190,\n        optionOne: {\n            votes: [],\n            text: \"become a superhero\",\n        },\n        optionTwo: {\n            votes: [\"johndoe\", \"sarahedo\"],\n            text: \"become a supervillain\",\n        },\n    },\n    am8ehyc8byjqgar0jgpub9: {\n        id: \"am8ehyc8byjqgar0jgpub9\",\n        author: \"sarahedo\",\n        timestamp: 1488579767190,\n        optionOne: {\n            votes: [],\n            text: \"be telekinetic\",\n        },\n        optionTwo: {\n            votes: [\"sarahedo\"],\n            text: \"be telepathic\",\n        },\n    },\n    loxhs1bqm25b708cmbf3g: {\n        id: \"loxhs1bqm25b708cmbf3g\",\n        author: \"tylermcginnis\",\n        timestamp: 1482579767190,\n        optionOne: {\n            votes: [],\n            text: \"be a front-end developer\",\n        },\n        optionTwo: {\n            votes: [\"sarahedo\"],\n            text: \"be a back-end developer\",\n        },\n    },\n    vthrdm985a262al8qx3do: {\n        id: \"vthrdm985a262al8qx3do\",\n        author: \"tylermcginnis\",\n        timestamp: 1489579767190,\n        optionOne: {\n            votes: [\"tylermcginnis\"],\n            text: \"find $50 yourself\",\n        },\n        optionTwo: {\n            votes: [\"johndoe\"],\n            text: \"have your best friend find $500\",\n        },\n    },\n    xj352vofupe1dqz9emx13r: {\n        id: \"xj352vofupe1dqz9emx13r\",\n        author: \"johndoe\",\n        timestamp: 1493579767190,\n        optionOne: {\n            votes: [\"johndoe\"],\n            text: \"write JavaScript\",\n        },\n        optionTwo: {\n            votes: [\"tylermcginnis\"],\n            text: \"write Swift\",\n        },\n    },\n};\n\nfunction generateUID() {\n    return (\n        Math.random().toString(36).substring(2, 15) +\n        Math.random().toString(36).substring(2, 15)\n    );\n}\n\nexport function _getUsers() {\n    return new Promise((res, rej) => {\n        setTimeout(() => res({ ...users }), 1000);\n    });\n}\n\nexport function _getQuestions() {\n    return new Promise((res, rej) => {\n        setTimeout(() => res({ ...questions }), 1000);\n    });\n}\n\nfunction formatQuestion({ optionOneText, optionTwoText, author }) {\n    return {\n        id: generateUID(),\n        timestamp: Date.now(),\n        author,\n        optionOne: {\n            votes: [],\n            text: optionOneText,\n        },\n        optionTwo: {\n            votes: [],\n            text: optionTwoText,\n        },\n    };\n}\n\nexport function _saveQuestion(question) {\n    return new Promise((res, rej) => {\n        const authedUser = question.author;\n        const formattedQuestion = formatQuestion(question);\n\n        setTimeout(() => {\n            questions = {\n                ...questions,\n                [formattedQuestion.id]: formattedQuestion,\n            };\n\n            users = {\n                ...users,\n                [authedUser]: {\n                    ...users[authedUser],\n                    questions: users[authedUser].questions.concat([\n                        formattedQuestion.id,\n                    ]),\n                },\n            };\n\n            res(formattedQuestion);\n        }, 1000);\n    });\n}\n\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\n    return new Promise((res, rej) => {\n        setTimeout(() => {\n            users = {\n                ...users,\n                [authedUser]: {\n                    ...users[authedUser],\n                    answers: {\n                        ...users[authedUser].answers,\n                        [qid]: answer,\n                    },\n                },\n            };\n\n            questions = {\n                ...questions,\n                [qid]: {\n                    ...questions[qid],\n                    [answer]: {\n                        ...questions[qid][answer],\n                        votes: questions[qid][answer].votes.concat([\n                            authedUser,\n                        ]),\n                    },\n                },\n            };\n\n            res();\n        }, 500);\n    });\n}\n","export default __webpack_public_path__ + \"static/media/tyler.cdb79b9f.jpg\";","import {\r\n    _getQuestions,\r\n    _getUsers,\r\n    _saveQuestion,\r\n    _saveQuestionAnswer,\r\n} from \"./_DATA\";\r\n\r\nexport const getInitialData = () =>\r\n    Promise.all([_getQuestions(), _getUsers()])\r\n        .then(([questions, users]) => ({\r\n            questions,\r\n            users,\r\n        }))\r\n        .catch((e) => console.log(e));\r\nexport const saveQuestion = (info) => _saveQuestion(info);\r\nexport const saveQuestionAnswer = (info) => _saveQuestionAnswer(info);\r\n","export const RECIEVE_USERS = \"RECIEVE_USERS\";\r\nexport const UPDATE_USER_QUESTIONS = \"UPDATE_USER_QUESTIONS\";\r\nexport const ADD_USER_ANSWER = \"ADD_USER_ANSWER\";\r\nexport const REMOVE_USER_ANSWER = \"REMOVE_USER_ANSWER\";\r\n\r\nexport const recieveUsers = (users) => ({\r\n    type: RECIEVE_USERS,\r\n    users,\r\n});\r\n\r\nexport const updateUserQuestions = (uid, question) => ({\r\n    type: UPDATE_USER_QUESTIONS,\r\n    uid,\r\n    question,\r\n});\r\n\r\nexport const addUserAnswer = (uid, question, answer) => ({\r\n    type: ADD_USER_ANSWER,\r\n    uid,\r\n    question,\r\n    answer,\r\n});\r\n\r\nexport const removeUserAnswer = (uid, question, answer) => ({\r\n    type: REMOVE_USER_ANSWER,\r\n    uid,\r\n    question,\r\n    answer,\r\n});\r\n","import { saveQuestion, saveQuestionAnswer } from \"../utils/api\";\r\nimport { updateUserQuestions, addUserAnswer, removeUserAnswer } from \"./users\";\r\nimport { showLoading, hideLoading } from \"react-redux-loading-bar\";\r\n\r\nexport const RECIEVE_QUESTIONS = \"RECIEVE_QUESTIONS\";\r\nexport const ADD_QUESTION = \"ADD_QUESTION\";\r\nexport const ADD_ANSWER = \"ADD_ANSWER\";\r\nexport const REMOVE_ANSWER = \"REMOVE_ANSWER\";\r\n\r\nexport const recieveQuestions = (questions) => ({\r\n    type: RECIEVE_QUESTIONS,\r\n    questions,\r\n});\r\n\r\nconst addQuestion = (question) => ({\r\n    type: ADD_QUESTION,\r\n    question,\r\n});\r\n\r\nexport const handleAddQuestion = (optionOneText, optionTwoText) => (\r\n    dispatch,\r\n    getState\r\n) => {\r\n    const { authedUser } = getState();\r\n    dispatch(showLoading());\r\n    return saveQuestion({\r\n        author: authedUser,\r\n        optionOneText,\r\n        optionTwoText,\r\n    }).then((question) => {\r\n        dispatch(addQuestion(question));\r\n        dispatch(updateUserQuestions(authedUser, question.id));\r\n        dispatch(hideLoading());\r\n    });\r\n};\r\n\r\nconst addAnswer = (qid, authedUser, answer) => ({\r\n    type: ADD_ANSWER,\r\n    qid,\r\n    authedUser,\r\n    answer,\r\n});\r\n\r\nconst removeAnswer = (qid, authedUser, answer) => ({\r\n    type: REMOVE_ANSWER,\r\n    qid,\r\n    authedUser,\r\n    answer,\r\n});\r\n\r\nexport const handleAddAnswer = (qid, answer) => (dispatch, getState) => {\r\n    const { authedUser } = getState();\r\n    dispatch(addAnswer(qid, authedUser, answer));\r\n    dispatch(addUserAnswer(authedUser, qid, answer));\r\n    return saveQuestionAnswer({ authedUser, qid, answer }).catch((e) => {\r\n        console.log(e);\r\n        dispatch(removeAnswer(qid, authedUser, answer));\r\n        dispatch(removeUserAnswer(authedUser, qid, answer));\r\n        alert(\"Error saving the answer. Try again,please\");\r\n    });\r\n};\r\n","import { getInitialData } from \"../utils/api\";\r\nimport { recieveUsers } from \"./users\";\r\nimport { recieveQuestions } from \"./questions\";\r\nimport { showLoading, hideLoading } from \"react-redux-loading-bar\";\r\n\r\nexport const handleInitialData = () => (dispatch) => {\r\n    dispatch(showLoading());\r\n    return getInitialData().then(({ users, questions }) => {\r\n        dispatch(recieveUsers(users));\r\n        dispatch(recieveQuestions(questions));\r\n        dispatch(hideLoading());\r\n    });\r\n};\r\n","export const SET_AUTHED_USER = \"SET_AUTHED_USER\";\r\nexport const REMOVE_AUTHED_USER = \"REMOVE_AUTHED_USER\";\r\n\r\nexport const setAuthedUser = (id) => ({\r\n    type: SET_AUTHED_USER,\r\n    id,\r\n});\r\n\r\nexport const removeAuthedUser = (id) => ({\r\n    type: REMOVE_AUTHED_USER,\r\n    id,\r\n});\r\n","import { React, Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport { removeAuthedUser } from \"../actions/authedUser\";\r\n\r\nclass Navbar extends Component {\r\n    handleLogout = () => {\r\n        this.props.dispatch(removeAuthedUser());\r\n    };\r\n    render() {\r\n        const { authedUser, path } = this.props;\r\n        return (\r\n            <nav className=\"nav\">\r\n                <ul>\r\n                    <li\r\n                        className={`nav-item ${\r\n                            path === \"/\" ? \"active-nav\" : \"\"\r\n                        }`}\r\n                    >\r\n                        <NavLink to=\"/\">Home</NavLink>\r\n                    </li>\r\n                    <li\r\n                        className={`nav-item ${\r\n                            path === \"/add\" ? \"active-nav\" : \"\"\r\n                        }`}\r\n                    >\r\n                        <NavLink to=\"/add\">New Question</NavLink>\r\n                    </li>\r\n                    <li\r\n                        className={`nav-item ${\r\n                            path === \"/leaderboard\" ? \"active-nav\" : \"\"\r\n                        }`}\r\n                    >\r\n                        <NavLink to=\"/leaderboard\">Leader Board</NavLink>\r\n                    </li>\r\n                    {authedUser.name && (\r\n                        <>\r\n                            <li id=\"username\">{`Hi, ${authedUser.name}`}</li>\r\n                            <li>\r\n                                <img\r\n                                    src={authedUser.avatarURL}\r\n                                    alt=\"avatar\"\r\n                                    className=\"profile-pic\"\r\n                                />\r\n                            </li>\r\n                            <li\r\n                                style={{ cursor: \"pointer\" }}\r\n                                className=\"nav-item\"\r\n                                onClick={this.handleLogout}\r\n                            >\r\n                                logout\r\n                            </li>\r\n                        </>\r\n                    )}\r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ users, authedUser }, { location }) => ({\r\n    authedUser: { ...users[authedUser] },\r\n    path: location.pathname,\r\n});\r\nexport default withRouter(connect(mapStateToProps)(Navbar));\r\n","export const formatQuestion = (question, author, authedUser) => {\r\n    const { id, optionOne, optionTwo, timestamp } = question;\r\n    const { name, avatarURL } = author;\r\n    let answer = \"\";\r\n    let hasVoted = false;\r\n    if (optionOne.votes.includes(authedUser)) {\r\n        answer = \"optionOne\";\r\n        hasVoted = true;\r\n    }\r\n    if (optionTwo.votes.includes(authedUser)) {\r\n        answer = \"optionTwo\";\r\n        hasVoted = true;\r\n    }\r\n    return {\r\n        name,\r\n        id,\r\n        timestamp,\r\n        avatarURL,\r\n        optionOne: {\r\n            votes: optionOne.votes.length,\r\n            text: optionOne.text,\r\n        },\r\n        optionTwo: {\r\n            votes: optionTwo.votes.length,\r\n            text: optionTwo.text,\r\n        },\r\n        hasVoted,\r\n        authedUserVote: answer,\r\n    };\r\n};\r\n\r\nexport const formatUsers = (users) =>\r\n    users\r\n        ? Object.keys(users).map((id) => {\r\n              const answeredQuestions = Object.keys(users[id].answers).length;\r\n              const createdQuestions = users[id].questions.length;\r\n              return {\r\n                  id,\r\n                  name: users[id].name,\r\n                  avatarURL: users[id].avatarURL,\r\n                  answeredQuestions,\r\n                  createdQuestions,\r\n                  score: answeredQuestions + createdQuestions,\r\n              };\r\n          })\r\n        : [];\r\n","import { React, Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { formatQuestion } from \"../utils/helpers\";\r\n\r\nclass Question extends Component {\r\n    handleViewDetails = (e, id) => {\r\n        e.preventDefault();\r\n        this.props.history.push(`/question/${id}`);\r\n    };\r\n    render() {\r\n        const { question } = this.props;\r\n        return (\r\n            <li className=\"question\">\r\n                <div className=\"question-header\">{`${question.name} asks,`}</div>\r\n                <div className=\"question-avatar\">\r\n                    <img src={question.avatarURL} alt=\"avatar\" />\r\n                </div>\r\n                <div className=\"question-options\">\r\n                    <span>\r\n                        {`Would you rather ${question.optionOne.text} or ${question.optionTwo.text}?`}\r\n                    </span>\r\n                    <button\r\n                        className=\"btn\"\r\n                        onClick={(e) => this.handleViewDetails(e, question.id)}\r\n                    >\r\n                        View datails\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ questions, authedUser, users }, { id }) => {\r\n    if (!questions || !authedUser || !users) return { question: null };\r\n    return {\r\n        question: formatQuestion(\r\n            questions[id],\r\n            users[questions[id].author],\r\n            authedUser\r\n        ),\r\n    };\r\n};\r\nexport default withRouter(connect(mapStateToProps)(Question));\r\n","import { React, Component } from \"react\";\r\nimport {Redirect} from \"react-router-dom\"\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport { VscAccount } from \"react-icons/vsc\";\r\nimport { setAuthedUser } from \"../actions/authedUser\";\r\n\r\nclass LoadingPage extends Component {\r\n    state = {\r\n        authedUser: \"\",\r\n    };\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            authedUser: e.value,\r\n        });\r\n    };\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { dispatch } = this.props;\r\n        const { authedUser } = this.state;\r\n        authedUser && dispatch(setAuthedUser(authedUser));\r\n    };\r\n    render() {\r\n        const { users, authedUser } = this.props;\r\n\r\n        return (\r\n            <>\r\n                {!authedUser ? (\r\n                    <div className=\"dashboard new-question login\">\r\n                        <div className=\"login-header\">\r\n                            <strong>\r\n                                Welcome to the Would You Rather App!\r\n                            </strong>\r\n                            <span>Please, sign in to continue</span>\r\n                        </div>\r\n                        <form\r\n                            onSubmit={this.handleSubmit}\r\n                            className=\"login-form\"\r\n                        >\r\n                            <VscAccount className=\"login-icon\" />\r\n                            <Select\r\n                                options={users}\r\n                                className=\"select\"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <button className=\"btn\">Sign in</button>\r\n                        </form>\r\n                    </div>\r\n                ) : <Redirect to=\"/\"/>}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ users = {}, authedUser }) => ({\r\n    authedUser,\r\n    users: Object.keys(users).map((id) => ({\r\n        value: id,\r\n        label: (\r\n            <div className=\"login-option\">\r\n                <img src={users[id].avatarURL} alt=\"avatar\" />\r\n                <span>{users[id].name}</span>\r\n            </div>\r\n        ),\r\n    })),\r\n});\r\nexport default connect(mapStateToProps)(LoadingPage);\r\n","import { React } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport LoginPage from \"./LoginPage\";\r\n\r\nconst RedirectLogin = (props) => {\r\n    const { logedin, children } = props;\r\n    return logedin ? children : <LoginPage />;\r\n};\r\n\r\nconst mapStateToProps = ({ authedUser }, { children }) => ({\r\n    logedin: authedUser !== null,\r\n    children,\r\n});\r\n\r\nexport default connect(mapStateToProps)(RedirectLogin);\r\n","import { React, Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Question from \"./Question\";\r\nimport RedirectLogin from \"./RedirectLogin\";\r\n\r\nclass Dashboard extends Component {\r\n    state = {\r\n        answeredList: false,\r\n    };\r\n    handleDisplayedList = (answeredList) => this.setState({ answeredList });\r\n\r\n    render() {\r\n        return (\r\n            <RedirectLogin>\r\n                <div className=\"dashboard\">\r\n                    <nav className=\"question-nav\">\r\n                        <ul>\r\n                            <li\r\n                                onClick={() => this.handleDisplayedList(false)}\r\n                                className={\r\n                                    this.state.answeredList ? \"\" : \"active-li\"\r\n                                }\r\n                            >\r\n                                Unanswered Questions\r\n                            </li>\r\n                            <li\r\n                                onClick={() => this.handleDisplayedList(true)}\r\n                                className={\r\n                                    this.state.answeredList ? \"active-li\" : \"\"\r\n                                }\r\n                            >\r\n                                Answered Questions\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                    <ul className=\"dashboard-list\">\r\n                        {this.state.answeredList\r\n                            ? this.props.answeredQuetionIds.map((id) => (\r\n                                  <Question key={id} id={id} />\r\n                              ))\r\n                            : this.props.unansweredQuetionIds.map((id) => (\r\n                                  <Question key={id} id={id} />\r\n                              ))}\r\n                    </ul>\r\n                </div>\r\n            </RedirectLogin>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStatetToProps = ({ questions, authedUser, users }) => {\r\n    const answers = authedUser ? Object.keys(users[authedUser].answers) : [];\r\n    return {\r\n        answeredQuetionIds: answers.sort(\r\n            (a, b) => questions[b].timestamp - questions[a].timestamp\r\n        ),\r\n        unansweredQuetionIds: Object.keys(questions)\r\n            .filter((id) => !answers.includes(id))\r\n            .sort((a, b) => questions[b].timestamp - questions[a].timestamp),\r\n    };\r\n};\r\n\r\nexport default connect(mapStatetToProps)(Dashboard);\r\n","import { React } from \"react\";\r\n\r\nconst Leader = (props) => {\r\n    const prize = props.prize ? props.prize : \"\";\r\n    return (\r\n        <li className=\"leader\">\r\n            <img src={props.avatarURL} alt=\"avatar\" />\r\n            <div className=\"leader-info\">\r\n                <span className=\"info1\">{props.name}</span>\r\n                <span className=\"info2\">Answered Questions</span>\r\n                <span className=\"info3\">{props.answeredQuestions}</span>\r\n                <span className=\"info4\">Created Questions</span>\r\n                <span className=\"info5\">{props.createdQuestions}</span>\r\n            </div>\r\n            <div className=\"score\">\r\n                <span className=\"score-header\">Score</span>\r\n                <span className={`score-number ${prize}`}>{props.score}</span>\r\n            </div>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default Leader;\r\n","import { React, Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { formatUsers } from \"../utils/helpers\";\r\nimport Leader from \"./Leader\";\r\nimport RedirectLogin from \"./RedirectLogin\";\r\n\r\nclass Leaderboard extends Component {\r\n    render() {\r\n        const prize = {\r\n            0: \"gold\",\r\n            1: \"silver\",\r\n            2: \"bronze\",\r\n        };\r\n        return (\r\n            <RedirectLogin>\r\n                <div className=\"dashboard leaderboard \">\r\n                    {this.props.users.map((user, idx) => (\r\n                        <Leader prize={prize[idx]} key={user.id} {...user} />\r\n                    ))}\r\n                </div>\r\n            </RedirectLogin>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStatetToProps = ({ users }) => ({\r\n    users: formatUsers(users).sort((a, b) => b.score - a.score),\r\n});\r\nexport default connect(mapStatetToProps)(Leaderboard);\r\n","import { React, Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { handleAddQuestion } from \"../actions/questions\";\r\nimport RedirectLogin from \"./RedirectLogin\";\r\n\r\nclass NewQuestion extends Component {\r\n    state = {\r\n        option1: \"\",\r\n        option2: \"\",\r\n        redirect: false,\r\n    };\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { dispatch } = this.props;\r\n        const { option1, option2 } = this.state;\r\n        if (!option1.trim()) return alert(\"option one can't be empty\");\r\n        if (!option2.trim()) return alert(\"option two can't be empty\");\r\n        dispatch(handleAddQuestion(option1, option2));\r\n        this.setState({\r\n            option1: \"\",\r\n            option2: \"\",\r\n            redirect: true,\r\n        });\r\n    };\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        });\r\n    };\r\n    render() {\r\n        if (this.state.redirect) return <Redirect to=\"/\" />;\r\n        return (\r\n            <RedirectLogin>\r\n                <div className=\"dashboard leaderboard\">\r\n                    <div className=\"new-question\">\r\n                        <div className=\"new-question-header\">\r\n                            Create New Question\r\n                        </div>\r\n                        <form\r\n                            className=\"new-question-form\"\r\n                            onSubmit={this.handleSubmit}\r\n                        >\r\n                            <label>Would you rather...</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"option1\"\r\n                                placeholder=\"option one\"\r\n                                maxLength=\"50\"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <label id=\"or\">Or</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"option2\"\r\n                                placeholder=\"option two\"\r\n                                maxLength=\"50\"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <button className=\"btn\">Submit</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </RedirectLogin>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = () => ({});\r\nexport default connect(mapStateToProps)(NewQuestion);\r\n","import { React, Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { formatQuestion } from \"../utils/helpers\";\r\nimport { handleAddAnswer } from \"../actions/questions\";\r\n\r\nclass QuestionPage extends Component {\r\n    state = {\r\n        option: \"\",\r\n    };\r\n    handleChange = (e) => {\r\n        e.target.checked &&\r\n            this.setState({\r\n                option: e.target.value,\r\n            });\r\n    };\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { option } = this.state;\r\n        const { dispatch, question } = this.props;\r\n        if (!option) return alert(\"please, select an option!\");\r\n        dispatch(handleAddAnswer(question.id, option));\r\n    };\r\n    clacWidth = (a, b) => ((a / (a + b || 1)) * 100).toFixed(2);\r\n    render() {\r\n        const { question } = this.props;\r\n        if (!question) {\r\n            alert(\r\n                \"Question might not exist or you are not allowed to see this questions!\\nYou will be redirected to home page.\"\r\n            );\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        return (\r\n            <div className=\"dashboard leaderboard\">\r\n                <li className=\"question\">\r\n                    <div className=\"question-header\">\r\n                        {question.hasVoted\r\n                            ? `Asked by ${question.name}`\r\n                            : `${question.name} asks,`}\r\n                    </div>\r\n                    <div className=\"question-avatar\">\r\n                        <img src={question.avatarURL} alt=\"avatar\" />\r\n                    </div>\r\n                    <div className=\"question-options\">\r\n                        {question.hasVoted ? (\r\n                            <>\r\n                                <strong>Results :</strong>\r\n                                <span\r\n                                    className={`option-one ${\r\n                                        question.authedUserVote === \"optionOne\"\r\n                                            ? \"voted\"\r\n                                            : \"\"\r\n                                    }`}\r\n                                >\r\n                                    <span></span>\r\n                                    {question.optionOne.text}\r\n                                    <div className=\"progress-bar\">\r\n                                        <div\r\n                                            className=\"light-voted\"\r\n                                            style={{\r\n                                                width: `${this.clacWidth(\r\n                                                    question.optionOne.votes,\r\n                                                    question.optionTwo.votes\r\n                                                )}%`,\r\n                                            }}\r\n                                        >\r\n                                            {this.clacWidth(\r\n                                                question.optionOne.votes,\r\n                                                question.optionTwo.votes\r\n                                            )}\r\n                                            %\r\n                                        </div>\r\n                                    </div>\r\n                                    {`${question.optionOne.votes} out of ${\r\n                                        question.optionOne.votes +\r\n                                        question.optionTwo.votes\r\n                                    } votes`}\r\n                                </span>\r\n                                <span\r\n                                    className={`option-two ${\r\n                                        question.authedUserVote === \"optionTwo\"\r\n                                            ? \"voted\"\r\n                                            : \"\"\r\n                                    }`}\r\n                                >\r\n                                    <span></span>\r\n                                    {question.optionTwo.text}\r\n                                    <div className=\"progress-bar\">\r\n                                        <div\r\n                                            className=\"light-voted\"\r\n                                            style={{\r\n                                                width: `${this.clacWidth(\r\n                                                    question.optionTwo.votes,\r\n                                                    question.optionOne.votes\r\n                                                )}%`,\r\n                                            }}\r\n                                        >\r\n                                            {this.clacWidth(\r\n                                                question.optionTwo.votes,\r\n                                                question.optionOne.votes\r\n                                            )}\r\n                                            %\r\n                                        </div>\r\n                                    </div>\r\n                                    {`${question.optionTwo.votes} out of ${\r\n                                        question.optionOne.votes +\r\n                                        question.optionTwo.votes\r\n                                    } votes`}\r\n                                </span>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <strong>Would you rather :</strong>\r\n                                <form\r\n                                    className=\"save-option new-question-form\"\r\n                                    onSubmit={this.handleSubmit}\r\n                                >\r\n                                    <label>\r\n                                        <input\r\n                                            type=\"radio\"\r\n                                            name=\"option\"\r\n                                            value=\"optionOne\"\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                        {question.optionOne.text}\r\n                                    </label>\r\n                                    <label>\r\n                                        <input\r\n                                            type=\"radio\"\r\n                                            name=\"option\"\r\n                                            value=\"optionTwo\"\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                        {question.optionTwo.text}\r\n                                    </label>\r\n                                    <button className=\"btn\">Submit</button>\r\n                                </form>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </li>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ questions, authedUser, users }, props) => {\r\n    if (!questions || !authedUser || !users) return { question: null };\r\n    const { id } = props.match.params;\r\n    return {\r\n        question: formatQuestion(\r\n            questions[id],\r\n            users[questions[id].author],\r\n            authedUser\r\n        ),\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(QuestionPage);\r\n","import { React } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ImSad } from \"react-icons/im\";\r\nimport RedirectLogin from \"./RedirectLogin\";\r\n\r\nconst NotFound = (props) => {\r\n    return (\r\n        <RedirectLogin>\r\n            <div className=\"dashboard leaderboard not-found\">\r\n                <h1>404</h1>\r\n                <ImSad className=\"not-found-icon\" />\r\n                <h1>Page Not Found</h1>\r\n                <p>\r\n                    The page you are looking for doesn't exist or other error\r\n                    occurred.\r\n                </p>\r\n                <p>\r\n                    Click <Link to=\"/\">here</Link> to go home\r\n                </p>\r\n            </div>\r\n        </RedirectLogin>\r\n    );\r\n};\r\n\r\nexport default NotFound;\r\n","import { React, Component } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { handleInitialData } from \"../actions/shared\";\nimport Navbar from \"./Navbar\";\nimport Dashboard from \"./Dashboard\";\nimport Leaderboard from \"./Leaderboard\";\nimport NewQuestion from \"./NewQuestion\";\nimport QuestionPage from \"./QuestionPage\";\nimport LoadingBar from \"react-redux-loading-bar\";\nimport LoginPage from \"./LoginPage\";\nimport NotFound from \"./NotFound\";\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.dispatch(handleInitialData());\n    }\n    render() {\n        return (\n            <HashRouter>\n                <div className=\"App\">\n                    <LoadingBar />\n                    <Navbar />\n                    <Switch>\n                        <Route exact path=\"/\" component={Dashboard} />\n                        <Route path=\"/leaderboard\" component={Leaderboard} />\n                        <Route path=\"/add\" component={NewQuestion} />\n                        <Route path=\"/question/:id\" component={QuestionPage} />\n                        <Route path=\"/login\" component={LoginPage} />\n                        <Route component={NotFound} />\n                    </Switch>\n                </div>\n            </HashRouter>\n        );\n    }\n}\n\nexport default connect()(App);\n","import { SET_AUTHED_USER, REMOVE_AUTHED_USER } from \"../actions/authedUser\";\r\n\r\nconst authedUser = (state = null, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTHED_USER:\r\n            return action.id;\r\n        case REMOVE_AUTHED_USER:\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authedUser;\r\n","import {\r\n    RECIEVE_USERS,\r\n    UPDATE_USER_QUESTIONS,\r\n    ADD_USER_ANSWER,\r\n    REMOVE_USER_ANSWER,\r\n} from \"../actions/users\";\r\n\r\nconst users = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case RECIEVE_USERS:\r\n            return {\r\n                ...state,\r\n                ...action.users,\r\n            };\r\n        case UPDATE_USER_QUESTIONS:\r\n            return {\r\n                ...state,\r\n                [action.uid]: {\r\n                    ...state[action.uid],\r\n                    questions: state[action.uid].questions.concat(\r\n                        action.question\r\n                    ),\r\n                },\r\n            };\r\n        case ADD_USER_ANSWER:\r\n            return {\r\n                ...state,\r\n                [action.uid]: {\r\n                    ...state[action.uid],\r\n                    answers: {\r\n                        ...state[action.uid].answers,\r\n                        [action.question]: action.answers,\r\n                    },\r\n                },\r\n            };\r\n        case REMOVE_USER_ANSWER:\r\n            const answers = { ...state[action.uid].answers };\r\n            delete answers[action.question];\r\n            return {\r\n                ...state,\r\n                [action.uid]: {\r\n                    ...state[action.uid],\r\n                    answers,\r\n                },\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default users;\r\n","import {\r\n    RECIEVE_QUESTIONS,\r\n    ADD_QUESTION,\r\n    ADD_ANSWER,\r\n    REMOVE_ANSWER,\r\n} from \"../actions/questions\";\r\n\r\nconst questions = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case RECIEVE_QUESTIONS:\r\n            return {\r\n                ...state,\r\n                ...action.questions,\r\n            };\r\n        case ADD_QUESTION:\r\n            return {\r\n                ...state,\r\n                [action.question.id]: action.question,\r\n            };\r\n        case ADD_ANSWER: {\r\n            const question = state[action.qid];\r\n            question[action.answer].votes = question[\r\n                action.answer\r\n            ].votes.concat([action.authedUser]);\r\n            console.log({question})\r\n            return {\r\n                ...state,\r\n                [action.qid]: question,\r\n            };\r\n        }\r\n        case REMOVE_ANSWER: {\r\n            const question = state[action.qid];\r\n            question[action.answer].votes = question[\r\n                action.answer\r\n            ].votes.filter((uid) => uid !== action.authedUser);\r\n\r\n            return {\r\n                ...state,\r\n                [action.qid]: question,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default questions;\r\n","import { combineReducers } from \"redux\";\r\nimport authedUser from \"./authedUser\";\r\nimport users from \"./users\";\r\nimport questions from \"./questions\";\r\nimport { loadingBarReducer } from \"react-redux-loading-bar\";\r\n\r\nexport default combineReducers({\r\n    authedUser,\r\n    users,\r\n    questions,\r\n    loadingBar: loadingBarReducer,\r\n});\r\n","const logger = (store) => (next) => (action) => {\r\n    console.group(action.type);\r\n    console.log(\"The action: \", action);\r\n    const returnValue = next(action);\r\n    console.log(\"The new state: \", store.getState());\r\n    console.groupEnd();\r\n    return returnValue;\r\n};\r\n\r\nexport default logger;\r\n","import logger from \"./logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport { applyMiddleware } from \"redux\";\r\n\r\nexport default applyMiddleware(\r\n    thunk,\r\n    logger,\r\n);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./components/App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./reducers\";\nimport middleware from \"./middlewares\";\n\nconst store = createStore(reducer, middleware);\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}